{"version":3,"sources":["Margo/components/Todo.js","Margo/components/Form.js","Margo/firestore.js","Margo/App.js","Margo/TestApp.js","index.js"],"names":["Todo","todo","done","completeTodo","removeTodo","className","style","textDecoration","description","onClick","TodoForm","addTodo","React","useState","value","setValue","onSubmit","e","preventDefault","type","placeholder","onChange","target","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","firestore","collection","doc","set","getData","console","log","update","delete","state","todos","a","this","get","forEach","data","newTodos","setState","map","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQA+BeA,MA7Bf,YAAyD,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WACxC,OAAGF,EAEC,sBACAG,UAAU,OACVC,MAAO,CAAEC,eAAgBL,EAAO,eAAiB,IAFjD,UAICD,EAAKO,YACN,8BACE,wBAAQC,QAAS,kBAAML,EAAWH,EAAKO,cAAvC,yBAMF,sBACEH,UAAU,OACVC,MAAO,CAAEC,eAAgBL,EAAO,eAAiB,IAFnD,UAIGD,EAAKO,YACN,gCACE,wBAAQC,QAAS,kBAAMN,EAAaF,EAAKO,cAAzC,sBACA,wBAAQC,QAAS,kBAAML,EAAWH,EAAKO,cAAvC,2B,QCEKE,MAxBf,YAAgC,IAAZC,EAAW,EAAXA,QAClB,EAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KAUA,OACE,sBAAMC,SATa,SAAAC,GACnBA,EAAEC,iBACGJ,IACLH,EAAQG,GACRC,EAAS,MAKT,SACE,uBACEI,KAAK,OACLd,UAAU,QACVe,YAAY,yBACZN,MAAOA,EACPO,SAAU,SAAAJ,GAAC,OAAIF,EAASE,EAAEK,OAAOR,a,gBCPvCS,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,gBACnBC,MAAO,+CAKMP,QAAf,EC4DaQ,E,kDApEX,aAAe,IAAD,8BACV,gBAqBJpB,QAAU,SAACH,EAAaN,GACTqB,EAASS,YACDC,WAAW,SAASC,IAAI1B,GAAa2B,IAAI,CAC1D3B,YAAaA,EACbN,MAAM,IAER,EAAKkC,WA5BK,EA+BdjC,aAAe,SAAAK,GACX6B,QAAQC,IAAI,oBACDf,EAASS,YAEHC,WAAW,SAASC,IAAI1B,GAAa+B,OAAO,CACzD/B,YAAaA,EACbN,MAAM,IAEV,EAAKkC,WAvCK,EA0CdhC,WAAa,SAAAI,GACEe,EAASS,YACDC,WAAW,SAASC,IAAI1B,GAAagC,SACxD,EAAKJ,WA3CL,EAAKK,MAAQ,CACTC,MAAO,IAEX,EAAKN,UALK,E,kFAQd,iCAAAO,EAAA,6DACIC,KAAKH,MAAMC,MAAQ,GADvB,SAEwBnB,EAASS,YAAYC,WAAW,SAASY,MAFjE,cAGUC,SAAQ,SAAAZ,GACVG,QAAQC,IAAIJ,EAAIa,QAChB,IAAMvC,EAAc0B,EAAIa,OAAOvC,YACzBN,EAAOgC,EAAIa,OAAO7C,KAClB8C,EAAQ,sBAAO,EAAKP,MAAMC,OAAlB,CAAyB,CAAClC,cAAaN,UACrD,EAAK+C,SAAS,CACVP,MAAOM,OATnB,gD,0EAwCA,WAAU,IAAD,OACL,OACI,qBAAK3C,UAAU,MAAf,SACA,sBAAKA,UAAU,YAAf,UACKuC,KAAKH,MAAMC,MAAMQ,KAAI,SAACjD,GAAD,OACtB,cAAC,EAAD,CACIA,KAAMA,EACNC,KAAMD,EAAKC,KACXC,aAAc,EAAKA,aACnBC,WAAY,EAAKA,gBAGrB,cAAC,EAAD,CAAUO,QAASiC,KAAKjC,mB,GA7DtBC,IAAMuC,WCAFvC,IAAMuC,UCA5BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.891c4855.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Todo({ todo, done, completeTodo, removeTodo }) {\n  if(done) {\n    return (\n      <div\n      className=\"todo\"\n      style={{ textDecoration: done ? \"line-through\" : \"\" }}\n    >\n      {todo.description}\n      <div>\n        <button onClick={() => removeTodo(todo.description)}>remove</button>\n      </div>\n    </div>\n    )\n  } else {\n    return (\n      <div\n        className=\"todo\"\n        style={{ textDecoration: done ? \"line-through\" : \"\" }}\n      >\n        {todo.description}\n        <div>\n          <button onClick={() => completeTodo(todo.description)}>complete</button>\n          <button onClick={() => removeTodo(todo.description)}>remove</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Todo;","import React from \"react\";\r\n\r\nfunction TodoForm({ addTodo }) {\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (!value) return;\r\n    addTodo(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  \r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"input\"\r\n        placeholder=\"what do you need to do\"\r\n        value={value}\r\n        onChange={e => setValue(e.target.value)}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;","import firebase from \"firebase\";\r\n\r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyABTWq-50d_f2VN0e2AnYObpEAczXTFyvw\",\r\n    authDomain: \"react-projects-9c50e.firebaseapp.com\",\r\n    projectId: \"react-projects-9c50e\",\r\n    storageBucket: \"react-projects-9c50e.appspot.com\",\r\n    messagingSenderId: \"1074756691135\",\r\n    appId: \"1:1074756691135:web:2d5f16c6fbdcaa2700520a\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;","import React from \"react\";\r\nimport Todo from \"./components/Todo\";\r\nimport TodoForm from \"./components/Form\"\r\nimport \"./App.css\";\r\nimport firebase from \"./firestore\";\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            todos: [],\r\n        }\r\n        this.getData();\r\n    }\r\n\r\n    async getData() {\r\n        this.state.todos = [];\r\n        const items = await firebase.firestore().collection(\"todos\").get()\r\n        items.forEach(doc => {\r\n            console.log(doc.data())\r\n            const description = doc.data().description;\r\n            const done = doc.data().done;\r\n            const newTodos = [...this.state.todos, {description, done}]\r\n            this.setState({\r\n                todos: newTodos\r\n            })\r\n        })\r\n    }\r\n\r\n    addTodo = (description, done) => {\r\n        const db = firebase.firestore();\r\n        const userRef = db.collection(\"todos\").doc(description).set({\r\n          description: description,\r\n          done: false\r\n        });\r\n        this.getData();\r\n      };\r\n    \r\n    completeTodo = description => {\r\n        console.log(\"mark as complete\")\r\n        const db = firebase.firestore();\r\n    \r\n        const dbObj = db.collection(\"todos\").doc(description).update({\r\n            description: description, \r\n            done: true\r\n        })\r\n        this.getData();\r\n      };\r\n    \r\n    removeTodo = description => {\r\n        const db = firebase.firestore();\r\n        const userRef = db.collection(\"todos\").doc(description).delete();\r\n        this.getData();\r\n      };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n            <div className=\"todo-list\">\r\n                {this.state.todos.map((todo) => (\r\n                <Todo\r\n                    todo={todo}\r\n                    done={todo.done}\r\n                    completeTodo={this.completeTodo}\r\n                    removeTodo={this.removeTodo}\r\n                />\r\n                ))}\r\n                <TodoForm addTodo={this.addTodo} />\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App","import React from \"react\";\r\nimport Todo from \"./components/Todo\";\r\nimport TodoForm from \"./components/Form\"\r\nimport \"./App.css\";\r\nimport firebase from \"./firestore\";\r\n\r\nclass TestApp extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            todos: [],\r\n        }\r\n        this.getData();\r\n    }\r\n\r\n    async getData() {\r\n        this.state.todos = [];\r\n        const items = await firebase.firestore().collection(\"todos\").get()\r\n        items.forEach(doc => {\r\n            console.log(doc.data())\r\n            const description = doc.data().description;\r\n            const done = doc.data().done;\r\n            const newTodos = [...this.state.todos, {description, done}]\r\n            this.setState({\r\n                todos: newTodos\r\n            })\r\n        })\r\n    }\r\n\r\n    addTodo = (description, done) => {\r\n        const db = firebase.firestore();\r\n        const userRef = db.collection(\"todos\").doc(description).set({\r\n          description: description,\r\n          done: false\r\n        });\r\n        this.getData();\r\n      };\r\n    \r\n    completeTodo = description => {\r\n        console.log(\"mark as complete\")\r\n        const db = firebase.firestore();\r\n    \r\n        const dbObj = db.collection(\"todos\").doc(description).update({\r\n            description: description, \r\n            done: true\r\n        })\r\n        this.getData();\r\n      };\r\n    \r\n    removeTodo = description => {\r\n        const db = firebase.firestore();\r\n        const userRef = db.collection(\"todos\").doc(description).delete();\r\n        this.getData();\r\n      };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n            <div className=\"todo-list\">\r\n                {this.state.todos.map((todo) => (\r\n                <Todo\r\n                    todo={todo}\r\n                    done={todo.done}\r\n                    completeTodo={this.completeTodo}\r\n                    removeTodo={this.removeTodo}\r\n                />\r\n                ))}\r\n                <TodoForm addTodo={this.addTodo} />\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TestApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Margo/App';\nimport TestApp from './Margo/TestApp'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}